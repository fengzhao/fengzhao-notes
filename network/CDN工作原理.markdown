## 什么是CDN？





`CDN` 的全称是 `Content Delivery Network`，即内容分发网络。

`CDN` 是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块.

使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。

`CDN` 的关键技术主要包括了节点调度、节点负载均衡和内容存储、分发、管理技术。

具体来说，CDN就是采用更多的缓存服务器（CDN边缘节点），布放在用户访问相对集中的地区或网络中。

随着互联网的爆炸式发展，用户越来越多，加上宽带接入网的出现，内容源服务器和骨干网络的压力越来越大，无法及时响应用户的访问需求。

`CDN` 技术最初的核心理念就是，**将内容缓存在终端用户附近**。（主要是指将静态资源缓存到离用户物理距离更近的节点上）

当用户访问网站时，利用全局负载技术，将用户的访问指向距离最近的缓存服务器上，由缓存服务器响应用户请求。（有点像电商的本地仓吧？）



由于 `CDN` 跟互联网骨干网的相关性很大，背后涉及到的网络技术和资源较为复杂，大部分公司都没能力自建`CDN`。

都只能采购一些云计算公司的产品。

比较著名的 CDN 厂商有：

-  阿里云、腾讯云（知乎就用了腾讯CDN）、七牛云、又拍云等。
- AWS、cloudflare、akamai（飞书就用了这家）





> 参考
>
> https://zhuanlan.zhihu.com/p/52362950
>
> https://spike.dev/2020/10/26/deep-dive-into-cdn-%e6%b7%b1%e5%ba%a6%e5%89%96%e6%9e%90-cdn-%e7%b3%bb%e7%bb%9f/



## CDN工作原理



> CDN 的`工作原理` 就是将源站的资源缓存CDN各个节点上，当请求命中了某个节点的资源缓存时，立即返回客户端。
>
> 避免每个请求的资源都通过源站获取，避免网络拥塞、缓解源站压力，保证用户访问资源的速度和体验。



举一个`生活`中的例子，我们在某东上`购买商品`，快递能做到当日送达，其根本原理是通过在全国各地建设本地仓库。

当用户购买商品时，通过`智能仓配模式`，为消费者选择就近仓库发货，从而`缩短`物流配送时间。



> CDN的诞生与起源
>
> 互联网发展初期，网络瓶颈在于“最后一公里”接入网，而不是骨干网，原因在于拨号上网速度低且用户数很少。但是随着接入网技术发展以及网民数量增加。网络瓶颈逐步转移到骨干网。
>
> CDN 诞生于二十多年前，为解决内容源服务器和传输`骨干网`络压力过大的问题，在 `1995` 年，麻省理工学院教授，互联网发明者之一 `Tom Leighton` 带领着研究生 Danny Lewin 和其他几位顶级研究人员一起尝试用数学问题解决网络拥堵问题。
>
> 他们使用数学算法，处理内容的动态路由安排，并最终解决了困扰 Internet 使用者的难题。
>
> 后来，史隆管理学院的 MBA 学生 Jonathan Seelig 加入了 Leighton 的队伍中，从那以后他们开始实施自己的商业计划，最终于 1998 年 8 月 20 日正式成立公司，命名为 Akamai。
>
> `Akamai` 公司通过智能化的互联网分发，结束了 “World Wide Wait” 的尴尬局面。当时全球访问量最大的网站之一“雅虎”成为其客户。
>
> 同年 1998 年，中国第一家 CDN 公司 `ChinaCache` 成立。蓝汛和网宿也先后成立，为新浪搜狐等站点提供图片加速服务。



在接入`CDN`前，当我们访问某个域名，直接拿到第一个真实服务器的IP地址，整个流程如下：终端用户—>本地LocalDNS解析—>源站公网IP。

如果没有CDN加速，当网络用户与内容源站距离较远时（如横跨大洲），大量的用户请求需要穿越互联网骨干网才能获得源站内容。





## CDN的主要应用场景

在计算机的世界中，缓存无处不在，从 CDN 诞生之初，就可以看出 CDN 最主要的应用场景就是缓存资源，加速用户访问效率。

随着信息安全的发展，DDos 攻击也一直是困扰着人们的一个难题，如果域名直接解析到源站的公网 IP 上，应用的公网IP暴露在网上。

一旦出现 DDos 攻击，对很多公司也是头疼的。也没有足够的能力去解决这种问题。

所以 CDN 的另一个作用就是隐藏源站 IP 地址，攻击的黑客只能看到 CDN 厂商的 IP 地址，攻击只能打到 CDN 厂商那边。



- 图片小文件：如果您的网站或应用 App 的主要业务为图片和小文件下载，包括各类型图片、html、css、js小文件等。
- 大文件下载：网站或应用App的主要业务为大文件下载，平均单个文件大小在20M以上，如游戏、各类客户端下载和App下载商店等。
- 视音频点播：网站或应用App的主要业务为视频点播或短视频类。支持MP4、FLV 主流视频格式。
- 全站加速：全站加速是阿里云一款独立产品，主要用于动态内容加速，也可以实现动静分离加速。
- 安全加速：如果您的网站易遭受攻击且必须兼顾加速的业务场景，则需要使用安全加速功能，提升全站安全性。



## CDN 调度系统

CDN平台通过建设广域覆盖的边缘节点基础设施，将业务网站的内容缓存到网民身边（最后一公里）。

这些海量边缘节点，分布在不同运营商，不同地域。具有不同的





通过CDN的工作原理，很容易就可以看出，调度系统是CDN的关键技术。用户是怎么知道最近的节点呢？

调度就是为了找到离用户最近的CDN节点，提供最优质的加速效果。



> 什么是调度？这是一个动作，如何分配或者获取资源，这里要想清楚。什么资源？谁分配资源？谁获取资源？
>
> 在CDN网络里，资源就是CDN服务节点，DNS来分配这些资源供用户请求使用，加快网络资源响应时间。
>
> 调度系统是指CDN厂家有能力通过各种机制将客户域名的所有现网请求引导到合适的目标机房，从而实现流量控制、质量控制、成本控制以及故障处理。



传统DNS调度：

1. 客户端通过运营商接入互联网宽带，上网终端默认使用运营商的 LocalDNS（LocalDNS没有缓存网站域名时） 。
2. 用户访问网站，







1)**DNS调度**

基于请求端localdns的出口IP归属地及运营商属性的DNS调度；



 2)**302调度**

再是基于客户端IP归属地及运营商属性的302跳转调度； 



3)**路由调度**

最后是基于Anycast技术（BGP路由）的机房流量调度；



## CDN 用到的两种主要技术







### Anycast IP 

我们知道，DDoS 作为一个比较 dirty 的攻击手段，从原理上其实并不是很好防御，基本只能通过升级硬件，加大带宽的方式处理。

而 Cloudflare 处理 DDoS 的方式比较特别，部分原因是因为他们的边缘节点 IP 是 Anycast IP 。

简单来说，就是同一个公网IP地址出现在了世界各地，世界各地的主机都是访问到了离自己最近（延迟最低）的主机所宣告的那个相同 IP。

举一个不恰当的例子，假设我们在中国上海访问 220.243.141.102 这个公网IP，这个IP所在的机器可能在北京某某数据中心。

假设我们在美国纽约访问 220.243.141.102 这个公网IP，这个IP所在的机器可能是洛杉矶某某数据中心。

在我们学习了计算机网络之后，我们知道了一个比较容易理解的道理：「IP 地址在互联网上是一台主机唯一的地址」，

这样当我们「ping 美国一台主机的 IP」的时候，ICMP 包会通过路由协议，走各种线路，最终到达目的主机。

而其中产生的网络延迟很大一部分就是由于距离所导致的，或者说，由于光速也就那样了，所以中美之间肯定会有 100+ms 的延迟，

由于地理位置造成的网络延迟，在国内也是很明显的。所以CDN不仅仅是用在全球加速，甚至为了国内各地加速，也可以使用这种方法。



由于有了 Anycast 网络和「计算机网络基础」的铺垫，即使是 DDoS 的攻击，数据包的行径也是要根据基本法。

所以 DDoS 的模式从之前的多点对一点变成了多点对多点，这样流量就被分散掉了，每个节点上的压力就会小了很多。



https://www.cloudflare.com/zh-cn/learning/cdn/glossary/anycast-network/









### DNS分区解析

------

实现 CDN 的第二种方法就是 DNS 分区解析，在使用 CDN 的时候，通常会让你在CDN厂商的控制台上配置一个加速域名。



比如，知乎域名是 www.zhihu.com 实际上就是一个 cdn 加速域名。



这个域名会添加很多 cname 记录，



其实就是把 CDN 域名进行 DNS 轮询的意思，



例如域名 www.dns-example.com，有三台服务器，分别是联通IP，移动IP，电信IP，DNS解析配置如下：

- 将域名 指向 联通IP地址 （1.1.1.1）
- 将域名 指向 移动IP地址 （2.2.2.2）
- 将域名 指向 电信IP地址 （3.3.3.3）









## 静态资源 vs 动态资源

> 







## 如何防止 CDN 被绕过



当发现目标站点存在 CDN 防护的时候，我们会尝试通过查找站点的真实 IP，从而绕过 CDN 防护。

我们来看一个比较常见的基于公有云的高可用架构，即：域名–>CDN，CDN–>WAF，WAF–>SLB，SLB–>ECS。



我们重点来关注一下 CDN–>WAF–>SLB–>ECS 这几层服务之间的关系吧。



这里分享一个 CDN 防护技巧，通过中间件配置只允许域名访问，禁止 ip 访问。比如nginx配置成禁止IP访问，只允许域名访问。

这样处理的话，所有直接访问站点真实 IP 的请求将会被拒绝。

任何用户只能通过域名访问站点，通过预先设定的网络链路，从 DNS→CDN→WAF防护→源站，所有的域名访问请求都必须经过 WAF 检测。



我们再来思考一个问题？

如果攻击者有了真实 IP 地址，修改本地 hosts 文件，强行将域名与 IP 解析，从而本地访问请求是无需经过 DNS 解析，还是可以绕过 CDN 防护。

这个策略，本质上是一个减缓措施，增加了寻找真实 IP 的难度。







# 基本概念



**源站**

源站是指运行用户业务应用的Web服务提供方。

源站可用来处理和响应用户请求，当边缘节点没有缓存用户请求的内容时，节点会返回源站获取资源数据并返回给用户。

阿里云CDN的源站可以是OSS域名、IP、源站域名或函数计算域名。



**回源**

当用户通过浏览器发送请求时，如果CDN节点未缓存请求的资源或缓存资源已到期，此时会回源站获取资源并返回给用户，该过程被称为回源。





**回源host**

回源HOST即回源域名，当源站服务器上提供多个域名服务时，CDN节点回源时在源站访问的具体站点域名。







https://cloud.tencent.com/developer/article/1394677