# 用户管理

Linux是一个多任务、多用户的操作系统，每个用户和进程都需要对应一个用户和用户组，用户名相当于姓名。

用户UID相当于身份证号，用户组GID相当于公司的工号。用户与用户组的关系一对一、多对一、一对多、多对多。



Linux 系统中的 root 账号通常用于系统的维护和管理，对系统所有资源具有访问权限。

因为权限过大，甚至可以删除系统文件致使系统瘫痪，所以不推荐直接使用 root ，而是使用用户自己创建的账号管理系统

标准用户有时候必须得到类似 root 账号的权限才能做一些事情，所以在Linux系统中使用 sudo 可以为了标准用户预设root身份。

```shell
 # 用预设的root身份来执行command命令
 sudo command 　　
 ### 标准用户使用sudo 时，必须先输入密码，之后5分钟内有效，超过5分钟需要再次输入密码
```



## 用户类型



- 超级管理员（超级用户）：具有操作系统的一切权限，UID 为 0 。一般是 "root" 用户，不建议一个系统内有多个超级用户。

- 系统用户(伪用户)：方便系统管理，用来运行系统和服务的用户，没有密码且不能登录，UID在 1 - 499 之间。

  ​	 比如有些服务不希望使用 root 的身份去执行，而是希望使用权限更小的账号去执行，所以我们就得要提供这些运作程序的拥有者。

- 普通用户：可登入用户，拥有系统部分权限的用户，UID 从 500 开始。



```shell
#　UID（用户ID）: 0（超级用户），1~499(系统用户)，500~65535(普通用户)

# /etc/passwd：用户文件。这个文件用来保存用户信息，这个文件每行格式如下:
# 用户名:密码:用户UID:用户组UID:用户描述信息:用户默认家目录:用户默认shell  
 
#  当默认shell为/usr/sbin/nologin时，表示禁止用户登录操作系统
#　root:x:0:0:root:/root:/bin/bash  
#  daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin


# /etc/shadow：用户密码文件，用于保存用户密码
# 由于 /etc/passwd 可以被所有用户访问，所以用户密码真正是被加密后保存在/etc/shadow 中。

# 这个文件每行格式：
# 用户名:
# 加密后的密码:
# 上次修改密码后过去的天数:
# 多少天后才能更改密码:
# 多少天后必须更改密码:
# 密码过期多少天前提醒用户:
# 密码过期多少天后禁用用户:
# 用户被禁用的日期:
# 预留字段：



# 添加用户的命令是 useradd ，这个命令的配置文件是 /etc/default/useradd ，使用 /usr/sbin/useradd -D 命令来查看默认配置。
GROUP=100    # 指定新用户的用户组默认为100这个公共组
HOME=/home   # 指定新用户的家目录默认在 /home/username 下
INACTIVE=-1  # 帐号是否过期：在linux系统中，默认创建的用户的有效期限都是永久的，但有时候，我们需要对某些用户的有效期限做个限定！
# 比如：公司给客户开的ftp账号，用于客户下载新闻稿件的。这个账号是有时间限制的，因为是付费的。合同到期了，这个账号就要求停用。
EXPIRE=               # 帐号终止日期
SHELL=/bin/bash       # 用户默认使用哪个shell，一般是bash，当默认shell为/usr/sbin/nologin时，表示禁止用户登录操作系统
SKEL=/etc/skel        # 这个目录包含了用户家目录的模板文件，创建新用户时，将这个目录中的内容拷贝到用户家目录中
CREATE_MAIL_SPOOL=yes # 系统将在邮件目录中创建一个文件用于用户账户接收邮件


chage -l username               # 查看用户的到期时间情况: Account expires： 表示账号到期时间
usermod -e "Oct 26,2018" lzwb   # 修改系统用户的时间:2018年的10月26号

useradd - # 创建用户
adduser   # 以人机交互的方式创建用户
# 使用 useradd 创建用户，发现 /home 目录下没有自动创建关于用户的目录。
# 所以做了一番调查研究   useradd是一个linux命令，但是它提供了很多参数在用户使用的时候根据自己的需要进行设置；
# adduser是一个perl 脚本，在使用的时候会出现类似人机交互的界面，提供选项让用户填写和选择，这个命令比起useradd来说比较简单，也比较傻瓜。

adduser --home  /var/ftp/  --shell  /bin/bash    ftp


#  --shell  /usr/sbin/nologin  # 不允许登录
#  --shell  /bin/bash          # 允许登录，且登录shell为bash

usermod # 修改用户设置
userdel # 删除用户

sudo useradd -m -g 组名 用户名 # 创建用户组
id [选项]….[用户]..　　　 # 查看用户的UID(用户id) 和 GID(组id) 和附件组等， 用户不写，默认当前用户
who [选项]… 　　　        # 查看目前所有登录的用户和用户IP地址和时间,未登录用户不能显示
whoami [选项] …..　　　   # 查看我是哪个用户
w 　　　                  # 查看系统负载与当前登录用户

# w 和 who 命令作用相似都是显示系统中正在登录的用户信息，这两个命令查询信息都来源于日志文件 "/var/run/utmp"。

```



```shell
# 用户配置文件         /etc/passwd
# 用户密码配置文件      /etc/shadow
# 用户组配置文件        /etc/group
# 用户组密码配置文件     /etc/gshadow

# 指定新用户的配置，包括家目录路径，SKEL路径，默认用户组，用户默认shell
新用户默认配置文件   /etc/default/useradd

# 当创建新用户时，这个目录的文件会被复制到新用户的家目录中，
新用户环境变量目录   /etc/skel/


/etc/shadow：用户密码文件
由于/etc/passwd 可以被所有用户访问，所以用户密码真正是被加密保存在/etc/shadow 中。
这个文件每行格式：
用户名:
加密后的密码:
上次修改密码后过去的天数:
多少天后才能更改密码:
多少天后必须更改密码:
密码过期多少天前提醒用户:
密码过期多少天后禁用用户:
用户被禁用的日期:
预留字段
```



**添加用户的命令是 useradd ，这个命令的配置文件是/etc/default/useradd ，使用 /usr/sbin/useradd -D 命令来查看默认配置。**



### 用户管理命令

```shell
# 创建用户
useradd
# 删除用户
userdel
# 修改用户信息
usermod
# 查看用户UID和GID
id
```







