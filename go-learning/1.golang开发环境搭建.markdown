## go安装

- 国外官网: https://golang.org/ 
- 国内官网: https://golang.google.cn/ 
- Go 语言中文网: https://studygolang.com/ https://studygolang.com/dl

官网下载 [go1.13.5.windows-amd64.msi](https://dl.google.com/go/go1.13.5.windows-amd64.msi) 安装包，双击执行安装，安装路径选择 D:\Go （如果不存在，则在d盘新建这个目录），下一步直接安装。

默认情况下，安装 Go 语言后新增了 GOPATH 和 PATH 用户变量，同时修改了系统环境变量PATH。





```shell
# 一般软件我安装在D盘，所以安装之前在D盘新建go和gopath两个文件夹：

# go安装目录结构

root@gcp-2:~#ls -al /usr/local/go/                                                                                                                                                                              
total 224                                                                                        
drwxr-xr-x 10 root root  4096 Oct 31  2019 .                                     
drwxr-xr-x 11 root root  4096 Oct 11 16:53 ..                                  
-rw-r--r--  1 root root 55389 Oct 31  2019 AUTHORS                          
-rw-r--r--  1 root root  1339 Oct 31  2019 CONTRIBUTING.md                       
-rw-r--r--  1 root root 84339 Oct 31  2019 CONTRIBUTORS                         
-rw-r--r--  1 root root  1479 Oct 31  2019 LICENSE                                                                          
-rw-r--r--  1 root root  1303 Oct 31  2019 PATENTS                             
-rw-r--r--  1 root root  1607 Oct 31  2019 README.md                            
-rw-r--r--  1 root root   397 Oct 31  2019 SECURITY.md                       
-rw-r--r--  1 root root     8 Oct 31  2019 VERSION                            
drwxr-xr-x  2 root root  4096 Oct 31  2019 api                                 
drwxr-xr-x  2 root root  4096 Oct 31  2019 bin                           
drwxr-xr-x  8 root root  4096 Oct 31  2019 doc                                    
-rw-r--r--  1 root root  5686 Oct 31  2019 favicon.ico                           
drwxr-xr-x  3 root root  4096 Oct 31  2019 lib                              
drwxr-xr-x 13 root root  4096 Oct 31  2019 misc                                  
drwxr-xr-x  6 root root  4096 Oct 31  2019 pkg                                
-rw-r--r--  1 root root    26 Oct 31  2019 robots.txt                            
drwxr-xr-x 47 root root  4096 Oct 31  2019 src                                
drwxr-xr-x 23 root root 12288 Oct 31  2019 test  

你的 Go 安装目录（$GOROOT）的文件夹结构应该如下所示：

README.md, AUTHORS, CONTRIBUTORS, LICENSE

/bin：包含可执行文件，如：编译器，Go 工具
/doc：包含示例程序，代码工具，本地文档等
/lib：包含文档模版
/misc：包含与支持 Go 编辑器有关的配置文件以及 cgo 的示例
/os_arch：包含标准库的包的对象文件（.a）
/src：包含源代码构建脚本和标准库的包的完整源代码（Go 是一门开源语言）
/src/cmd：包含 Go 和 C 的编译器和命令行脚本



# gopath目录结构

root@gcp-2:~# tree -L  2 /root/go/                                                                                                                                                                               
/root/go/                                                                      
├── bin           # bin 编译后生成的可执行文件，（为了方便，可以把此目录加入到 $PATH 变量中)            
├── pkg           # pkg 编译后生成的文件（比如：.a）                                                                  
│   └── mod                                                                            
└── src        	  # src 存放源代码（比如：.go .c .h .s 等）                                                                                                                                                                                 
root@gcp-2:~# 
```



- D:\go             go 安装目录，自带的系统库，二进制文件等。
- D:\gopath    工作区目录，工作区目录一般约定有三个子目录：
  -  src 存放源代码（比如：.go .c .h .s 等）   
  -  pkg 编译后生成的文件（比如：.a）   
  -  bin 编译后生成的可执行文件，（为了方便，可以把此目录加入到 $PATH 变量中)

修改 用户环境变量 ：GOPATH=D:\gopath

GOPATH允许多个目录，当有多个目录时，请注意分隔符，多个目录的时候Windows是分号，Linux系统是冒号。

当有多个GOPATH时，默认会将 go get 的内容放在第一个目录下。

GOPATH下的 src 目录就是平时开发程序的主要目录，所有的源码都是放在这个目录下面，那么一般我们的做法就是一个目录一个项目。

例如: $GOPATH/src/mymath 表示 mymath 这个应用包或者可执行应用，这个根据 package 是 main 还是其他来决定，main 的话就是可执行应用，其他的话就是应用包。

这个会在后续详细介绍package。

所以当新建应用或者一个代码包时都是在src目录下新建一个文件夹，文件夹名称一般是代码包名称，当然也允许多级目录，例如在src下面新建了目录$GOPATH/src/github.com/astaxie/beedb 那么这个包路径就是"github.com/astaxie/beedb"，包名称是最后一个目录beedb



## Go环境变量



- **$GOROOT:  Go 在你的电脑上的安装位置，它的值一般都是 $HOME/go，当然，你也可以安装在别的地方。**

- $GOARCH：目标机器的处理器架构，它的值可以是 386、amd64 或 arm。（ 386理解为**x86架构**，amd64理解为**x86-64架构**）

  - x86架构的特点是cpu的寄存器是32位的，因此也叫32位cpu。一般我们在32位cpu上安装32位操作系统。

  - x86_64,x64,AMD64，在表示cpu架构的时候都是一个意思，表示cpu的寄存器是64位的，因此也叫64位cpu。一般我们在64位cpu上安装64位操作系统
  
- $GOOS：目标机器的操作系统，它的值可以是 darwin、freebsd、linux 或 windows、android等等。

- $GOBIN：go install 安装可执行文件所在的目录，默认是 $GOROOT/bin，如果你使用的是 Go 1.0.3 及以后的版本，一般情况下可以将它置空，Go 将会使用前面提到的默认值。

- **GOPATH**： **工作区所在的绝对目录**

- 目标机器是指你打算运行你的 Go 应用程序的机器。

  Go 编译器支持交叉编译，也就是说你可以在一台机器上构建运行在具有不同操作系统和处理器架构上运行的应用程序。

  也就是说编写源代码的机器可以和目标机器有完全不同的特性（操作系统与处理器架构）。

  为了区分本地机器和目标机器，你可以使用 $GOHOSTOS 和 $GOHOSTARCH 设置本地机器的操作系统名称和编译体系结构。

  这两个变量只有在进行交叉编译的时候才会用到，如果你不进行显示设置，他们的值会和目标机器（$GOOS 和 $GOARCH）一样。

  



任意目录下打开命令行窗口都能调用 Go 相关命令,比如 go version 和 go env 。

这是因为安装 Go 时已自动追加了系统环境变量 PATH=%PATH%;:\Go\bin。如果上述验证失败，记得修改环境变量 PATH 试试看！



## vscode 开发环境配置

官网下载 [vscode](https://code.visualstudio.com/) ,下一步下一步安装。

必备插件：

- chinese 语言包
- vscode-icons 
- go
- material theme
-  

**自定义 vscode 配置环境** https://blog.csdn.net/huayunhualuo/article/details/93060238

**配置 vscode 代理**：

下载 shadowsocks 配置 ss 代理

在 vscode 中设置 proxy http://127.0.0.1:1081

ctr+shift+p 打开命令面板，输入 go:install ，选择 Go:Install/Update tools，选择所有的 tools ，安装。

## goland 开发环境配置





## Linux配置golang开发环境

```shell
cd /tmp
# 使用curl或wget下载
wget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz
curl https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz --output  go1.13.4.linux-amd64.tar.gz
tar -C /usr/local -xzf go1.13.4.linux-amd64.tar.gz


# ~/.zshrc 或 ~/.bashrc 中添加如下环境变量

export GOROOT=/usr/local/go
export GOPATH=/root/gopath
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin
```









